{"version":3,"sources":["logo.svg","Compents/SignUp.js","Compents/Login.js","Compents/Mems.js","App.js","reportWebVitals.js","index.js"],"names":["SignUp","history","useHistory","useState","validition","setValid","typeValid","setTypeValid","error","setError","user","setUser","pass","setPass","confirm","setConfrim","progress","setProg","submmit_handler","a","fetch","method","body","JSON","stringify","username","password","headers","then","r","json","data","index","setTimeout","className","Alert","variant","severity","TextField","autoComplete","value","onChange","e","target","id","label","type","CircularProgress","Button","disabled","color","onClick","Link","component","push","sendUser","Promise","resolve","reject","Login","setProgrss","submit_handler","preventDefault","console","log","catch","Mems","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e88641d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./SignUp.css\";\r\nfunction SignUp() {\r\n  let history = useHistory();\r\n  const [validition, setValid] = useState(false);\r\n  const [typeValid, setTypeValid] = useState(\"success\");\r\n\r\n  const [error, setError] = useState(false);\r\n  const [user, setUser] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [confirm, setConfrim] = useState(\"\");\r\n  const [progress, setProg] = useState(false);\r\n\r\n  const submmit_handler = async () => {\r\n    setProg(true);\r\n    //   add to the db\r\n    await fetch(\"/user/add-user\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username: user, password: pass }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        if (data.index === 1) {\r\n          setTypeValid(\"success\");\r\n        } else {\r\n          setTypeValid(\"error\");\r\n        }\r\n      });\r\n    // close the snipper\r\n    setProg(false);\r\n    setValid(true);\r\n    setTimeout(() => {\r\n      setValid(false);\r\n    }, 3000);\r\n  };\r\n  return (\r\n    <div className=\"mainpage\">\r\n      {validition && (\r\n        <Alert className=\"valadition\" variant=\"filled\" severity={typeValid}>\r\n          {typeValid === \"success\"\r\n            ? \"Signup success full\"\r\n            : \"You have to insert right valid\"}\r\n        </Alert>\r\n      )}\r\n      <div className=\"signup\">\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          value={user}\r\n          onChange={(e) => {\r\n            setUser(e.target.value);\r\n          }}\r\n          id=\"outlined-basic\"\r\n          label=\"User Name\"\r\n          variant=\"outlined\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          value={pass}\r\n          onChange={(e) => {\r\n            if (e.target.value !== confirm) {\r\n              setError(true);\r\n            } else {\r\n              setError(false);\r\n            }\r\n            setPass(e.target.value);\r\n          }}\r\n          id=\"outlined-basic\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <TextField\r\n          autoComplete=\"off\"\r\n          error={error}\r\n          value={confirm}\r\n          onChange={(e) => {\r\n            if (e.target.value !== pass) {\r\n              setError(true);\r\n            } else {\r\n              setError(false);\r\n            }\r\n            setConfrim(e.target.value);\r\n          }}\r\n          id=\"outlined-basic\"\r\n          label=\"Confirm password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        {progress ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            disabled={!user || !pass || error}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={submmit_handler}\r\n          >\r\n            SignUp\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <h5>\r\n        if you have been sign up{\" \"}\r\n        <Link\r\n          component=\"button\"\r\n          variant=\"body2\"\r\n          onClick={() => {\r\n            history.push(\"/login\");\r\n          }}\r\n        >\r\n          Login\r\n        </Link>\r\n      </h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Login.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction sendUser(user, pass) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"/user/check-user\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ username: user, password: pass }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        if (data.index === 1) resolve(\"perfect\");\r\n        else {\r\n          reject(\"not good\");\r\n        }\r\n      });\r\n  });\r\n}\r\nfunction Login() {\r\n  let history = useHistory();\r\n\r\n  const [user, setUser] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [progress, setProgrss] = useState(false);\r\n  const [validition, setValid] = useState(false);\r\n  const submit_handler = async (e) => {\r\n    e.preventDefault();\r\n    setProgrss(true);\r\n\r\n    await sendUser(user, pass)\r\n      .then((data) => {\r\n        setProgrss(false);\r\n        history.push(\"/meems\");\r\n        console.log(data);\r\n      })\r\n      .catch((data) => {\r\n        setProgrss(false);\r\n        setValid(true);\r\n        setTimeout(() => {\r\n          setValid(false);\r\n        }, 3000);\r\n        console.log(data);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      {validition && (\r\n        <Alert className=\"loginvalid\" variant=\"filled\" severity=\"error\">\r\n          You have to insert right valid\r\n        </Alert>\r\n      )}\r\n      <form className=\"flex\">\r\n        <TextField\r\n          value={user}\r\n          onChange={(e) => {\r\n            setUser(e.target.value);\r\n          }}\r\n          autoComplete=\"off\"\r\n          id=\"outlined-basic\"\r\n          label=\"useName\"\r\n          variant=\"outlined\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <TextField\r\n          value={pass}\r\n          onChange={(e) => {\r\n            setPass(e.target.value);\r\n          }}\r\n          autoComplete=\"off\"\r\n          id=\"outlined-basic\"\r\n          label=\"password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n        />\r\n        <br />\r\n        <br />\r\n\r\n        {progress ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <Button\r\n            disabled={!user || !pass}\r\n            onClick={submit_handler}\r\n            type=\"submit\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            Login\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction Mems() {\r\n  return (\r\n    <div>\r\n      <h1>this page to genorate meems</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mems;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport SignUp from \"./Compents/SignUp\";\nimport Login from \"./Compents/Login\";\nimport Mems from \"./Compents/Mems\";\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/meems\">\n            <Mems />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <SignUp />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}